from mre_common_vars import (
    BUILD_FOLDER,
    INPUT_FILES_FOR_CODEGEN,
    LEADER_MAKING,
    CORE_MODIFYING,
    LEADER_SUBCLASSES,
    LEADER_CLASSES,
    OUTPUT_FILES_DESTINATIONS,
    LOCALISATION_HEADER,
    LEADER_SUBCLASSES_NAMES,
    EXCLUDE_SUBCLASSES_FROM_CORE_MODIFYING,
    MACHINE_LOCALISATIONS_MAPFILE,
    EXCLUDE_TRAITS_FROM_CORE_MODIFYING,
    TRAITS_REQUIRING_DLC,
    AUTOGENERATED_HEADER,
    GESTALT_COUNCILOR_CLASS_MAP,
)

"""
  ______ ______ ______ ______ _____ _______ _____ 
 |  ____|  ____|  ____|  ____/ ____|__   __/ ____|
 | |__  | |__  | |__  | |__ | |       | | | (___  
 |  __| |  __| |  __| |  __|| |       | |  \___ \ 
 | |____| |    | |    | |___| |____   | |  ____) |
 |______|_|    |_|    |______\_____|  |_| |_____/ 

"""

def iterate_traits_generate_btn_fx_for_regulatory():
    pass

def iterate_traits_generate_btn_fx_for_cognitive():
    pass

def iterate_traits_generate_btn_fx_for_growth():
    pass

def iterate_traits_generate_btn_fx_for_legion():
    pass

def iterate_traits_generate_button_effects_for_councilor():
    pass


def gen_councilor_editor_traits_button_effects_code(
        councilor_type: str, trait_name: str, rarity: str, requires_paragon_dlc: bool=False,
        prerequisites: list = [],
):
    """ Councilors can't change class so they're restricted to just 1 class & subclass
    which means outside this code we just have to iterate one leader class' of traits """

    """ TODO: allow statements for:
    - paragon dlc
    - trait needs any dlc dependency
    - trait has any tech requirement
    MORE TODO:
    - conditionally call effect to remove T1 or T2 trait

    """
    # Figure out base trait name
    trait_ends_in_num = trait_name[-1].isdigit()
    if trait_ends_in_num:
        trait_name_no_tier = trait_name.rsplit('_',1)[0]
    else:
        trait_name_no_tier = trait_name
    
    # Calculate any additional statements to add to the "allow" block
    allowances = []
    if requires_paragon_dlc:
        allowances.append("has_paragon_dlc = yes")
    # Get fancy about picking up DLC requirements per trait
    if dlc_dependecy := TRAITS_REQUIRING_DLC.get(trait_name):
        allowances.append(f"{dlc_dependecy} = yes")
    # Assuming that prerequisites will always be tech *fingers crossed*
    if len(prerequisites):
        for tech in prerequisites:
            allowances.append(f"has_technology = {tech}")
    leader_class = GESTALT_COUNCILOR_CLASS_MAP[councilor_type]

    return f"""
#{councilor_type} #{trait_name} #{rarity}
oxr_mdlc_councilor_editor_{councilor_type}_{trait_name}_add_button_effect = {{
	potential = {{
		event_target:oxr_mdlc_councilor_editor_target = {{ NOT = {{ has_trait = {trait_name} }} }}
	}}
	allow = {{
		oxr_mdlc_councilor_editor_check_trait_resources_cost_{rarity} = yes
		event_target:oxr_mdlc_councilor_editor_target = {{
			oxr_mdlc_councilor_editor_check_trait_points_cost_{rarity} = yes
			oxr_mdlc_councilor_editor_check_trait_picks = yes
		}}
        {"\n        ".join(allowances)}
	}}
	effect = {{
		custom_tooltip = oxr_mdlc_councilor_editor_show_trait_total_cost_{rarity}
		event_target:oxr_mdlc_councilor_editor_target = {{
			oxr_mdlc_councilor_editor_remove_tier_1_or_2_traits_effect = {{ TRAIT_NAME = {trait_name_no_tier} }}
			add_trait_no_notify = {trait_name}
		}}
		hidden_effect = {{
			oxr_mdlc_councilor_editor_deduct_trait_resources_cost_{rarity} = yes
			event_target:oxr_mdlc_councilor_editor_target = {{
				oxr_mdlc_councilor_editor_deduct_trait_points_cost_{rarity} = yes
				oxr_mdlc_councilor_editor_deduct_trait_pick = yes
			}}
		}}
	}}
}}
oxr_mdlc_councilor_editor_{councilor_type}_{trait_name}_remove_button_effect = {{
    potential = {{
		event_target:oxr_mdlc_councilor_editor_target = {{ has_trait = {trait_name} }}
    }}
    allow = {{ always = yes }}
    effect = {{
        custom_tooltip = xvcv_mdlc_core_modifying_tooltip_remove_{leader_class}_{trait_name}
        hidden_effect = {{
			event_target:oxr_mdlc_councilor_editor_target = {{
				remove_trait = {trait_name}
				oxr_mdlc_councilor_editor_refund_trait_points_cost_{rarity} = yes
				oxr_mdlc_councilor_editor_refund_trait_pick = yes
			}}
			oxr_mdlc_councilor_editor_refund_trait_resources_cost_{rarity} = yes
        }}
    }}
}}
"""